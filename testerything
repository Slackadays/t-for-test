#!/bin/sh

# JavaScript + NodeJS

check_nodejs() {
  if [ -e package.json ]; then
    # We found a package.json file, let's see if it contains a test command.
    if grep -q '^[[:space:]]*"test"' package.json; then
      return 0
    fi
  fi
  return 1
}

run_nodejs() {
  echo "npm test"
  npm test
}

# Rust + Cargo

check_cargo() {
  [ -e Cargo.toml ]
}

run_cargo() {
  echo "cargo test"
  cargo test
}

# Haskell + Stack

check_stack() {
  [ -e package.yaml -a -e stack.yaml ]
}

run_stack() {
  echo "stack test"
  stack test
}

# Maven

check_maven() {
  [ -e pom.xml ]
}

run_maven() {
  echo "mvn test"
  mvn test
}

# Clojure + Leiningen

check_lein() {
  [ -e project.clj ]
}

run_lein() {
  echo "lein test"
  lein test
}

# Makefile

check_makefile() {
  if [ -e Makefile ]; then
    # We found a Makefile, let's see if it contains a test target.
    if grep -q '^test:' Makefile; then
      return 0
    fi
  fi
  return 1
}

run_makefile() {
  echo "make test"
  make test
}

# End of list of environments

check_and_run() {
  if check_makefile; then
    run_makefile
    exit
  elif check_nodejs; then
    run_nodejs
    exit
  elif check_cargo; then
    run_cargo
    exit
  elif check_stack; then
    run_stack
    exit
  elif check_maven; then
    run_maven
    exit
  elif check_lein; then
    run_lein
    exit
  elif check_makefile; then
    run_makefile
    exit
  fi
}

# The root of the project.
TOP=""

# Check if git exists on the system.
if [ -x "$(command -v git)" ]; then
  # Find the root of the git repository if we are inside one.
  TOP=$(git rev-parse --show-toplevel 2> /dev/null)
  if [ $? -ne 0 ]; then
    echo "Not in git repo"
    TOP=$HOME
  fi
fi

nothing_found() {
  echo "No tests found :'("
  exit 1
}

main() {
  while :
  do
    check_and_run
    if [ $PWD = $TOP ]; then
      nothing_found
    fi
    cd ..
    if [ $PWD = $HOME ]; then
      nothing_found
    fi
  done
}

main
